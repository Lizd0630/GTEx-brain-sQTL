#!/usr/bin/env python
#the purpose of this code is just to split the .map and .raw file of all SNPs into 23 chromosomes and each chromosome has its own .map and .raw file

import sys,os


allchr=['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22']

head=''
rawfile=open(sys.argv[1])        #read in the header part (sample ID + phenotype information)
for i in range(0, 6):
    head+=rawfile.readline()

#generate files for each chromosome
mapfiles={}
pedfiles={}      #this is actually the .raw file not .ped file
outdir=sys.argv[3] #full path
os.system('mkdir -p '+outdir)
for i in range(1, 23):
    mapfiles[str(i)]=open(outdir+'/chr'+str(i)+'.'+sys.argv[2].split('/')[-1], 'w')       #generate .map file for each chromosome
    pedfiles[str(i)]=open(outdir+'/chr'+str(i)+'.'+sys.argv[1].split('/')[-1], 'w')       #generate .raw file for each chromosom
    pedfiles[str(i)].write(head)    #write the header part into the .raw file

#write the SNP information into the files for each chromosome
for line in open(sys.argv[2]):     #for each SNP in the .map file
    a=line.split('\t')
    chr=a[0]       #chromosome of the SNP
    if chr in allchr:       #we remove chromosome X from our calculation
	    rs=a[1]        #SNP ID from the .map file
	    mapfiles[chr].write(line)     #output this SNP information into the .map file of the chromosome that the SNP belongs to
	    line2=rawfile.readline()      #SNP information (after the headers) from the genotype information of the current brain region (.raw file generated by 1_my_generateRaw.py)
	    rs2=line2.split('\t')[0]      #get the SNP ID
	    #if rs2!=rs:
	    #    rs2='_'.join(rs2.split('_')[:-1])
	    if (rs2!=rs):   #.map file and the .raw file generated by 1_my_generateRaw.py should contain the same list of SNPs, i.e., SNPs after the filter 
	        print ['rs error', rs, rs2]
	    pedfiles[chr].write(line2)    #output the SNP information  into the .raw file of the chromosome that the SNP belongs to
    
