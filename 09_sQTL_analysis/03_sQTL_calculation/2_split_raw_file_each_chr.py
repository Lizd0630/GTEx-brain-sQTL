#!/usr/bin/env python
#python ~/scratch/sQTL/scripts/split_raw_file_each_chr.py Genotype_450_maf0.01.map_tpose.raw /u/home/p/panyang/scratch/sQTL/Genotype_450_maf0.01.map .

#varible1: full path + file name of the genotype information of the current brain region generated by 1_my_generateRaw.py
#e.g. /u/nobackup/yxing/PROJECT/yidazhan/research/rotation_project/GTEx_brain_project/analysis/1_GLMM/sQTL/input_splicing/test_run/Brain-AnteriorcingulatecortexBA24/Genotype_450_maf0.01.map_tpose.raw 
#variable2: full path + file name of the .map file generated from vcf file
#e.g. /u/scratch2/p/panyang/sQTL/Genotype_450_maf0.01.map 
#variable3: output folder path
#e.g. /u/nobackup/yxing/PROJECT/yidazhan/research/rotation_project/GTEx_brain_project/analysis/1_GLMM/sQTL/input_splicing/test_run/Brain-AnteriorcingulatecortexBA24

#the purpose of this code is just to split the .map and .raw file of all SNPs into 23 chromosomes and each chromosome has its own .map and .raw file

#example input:
#sys.argv=['nothing',
#'/u/nobackup/yxing/PROJECT/yidazhan/research/rotation_project/GTEx_brain_project/analysis/1_GLMM/sQTL/input_splicing/test_run/Brain-AnteriorcingulatecortexBA24/Genotype_450_maf0.01.map_tpose_perm1.raw',
#'/u/nobackup/yxing/PROJECT/yidazhan/research/rotation_project/GTEx_brain_project/data/raw_data/files/genotype/SNP_array/Eddie/Genotype_450_maf0.01.map',
#'/u/nobackup/yxing/PROJECT/yidazhan/research/rotation_project/GTEx_brain_project/analysis/1_GLMM/sQTL/input_splicing/test_run/Brain-AnteriorcingulatecortexBA24']

import sys,os


allchr=['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22']

head=''
rawfile=open(sys.argv[1])        #read in the header part (sample ID + phenotype information)
for i in range(0, 6):
    head+=rawfile.readline()

#generate files for each chromosome
mapfiles={}
pedfiles={}      #this is actually the .raw file not .ped file
outdir=sys.argv[3] #full path
os.system('mkdir -p '+outdir)
for i in range(1, 23):
    mapfiles[str(i)]=open(outdir+'/chr'+str(i)+'.'+sys.argv[2].split('/')[-1], 'w')       #generate .map file for each chromosome
    pedfiles[str(i)]=open(outdir+'/chr'+str(i)+'.'+sys.argv[1].split('/')[-1], 'w')       #generate .raw file for each chromosom
    pedfiles[str(i)].write(head)    #write the header part into the .raw file

#write the SNP information into the files for each chromosome
for line in open(sys.argv[2]):     #for each SNP in the .map file
    a=line.split('\t')
    chr=a[0]       #chromosome of the SNP
    if chr in allchr:       #we remove chromosome X from our calculation
	    rs=a[1]        #SNP ID from the .map file
	    mapfiles[chr].write(line)     #output this SNP information into the .map file of the chromosome that the SNP belongs to
	    line2=rawfile.readline()      #SNP information (after the headers) from the genotype information of the current brain region (.raw file generated by 1_my_generateRaw.py)
	    rs2=line2.split('\t')[0]      #get the SNP ID
	    #if rs2!=rs:
	    #    rs2='_'.join(rs2.split('_')[:-1])
	    if (rs2!=rs):   #.map file and the .raw file generated by 1_my_generateRaw.py should contain the same list of SNPs, i.e., SNPs after the filter 
	        print ['rs error', rs, rs2]
	    pedfiles[chr].write(line2)    #output the SNP information  into the .raw file of the chromosome that the SNP belongs to
    
